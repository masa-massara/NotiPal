steps:
  # 1. Dockerイメージをビルドする
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/notipal-backend-repo/notipal-backend:${COMMIT_SHA}',
        '.', # Dockerfileがあるディレクトリをビルドコンテキストにする
        '-f',
        'Dockerfile', # Dockerfileのパス (このステップの作業ディレクトリからの相対パス)
      ]
    dir: 'apps/backend' # このステップの作業ディレクトリを apps/backend に設定

  # 2. ビルドしたイメージをArtifact Registryにプッシュする
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/notipal-backend-repo/notipal-backend:${COMMIT_SHA}']
    # dirは不要 (イメージ名で指定しているため)

  # 3. Cloud Runにデプロイする
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        'notipal-backend-service', # Cloud Runのサービス名
        '--image',
        'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/notipal-backend-repo/notipal-backend:${COMMIT_SHA}',
        '--region',
        'asia-northeast1',
        '--platform',
        'managed',
        '--quiet',
        '--service-account', # ランタイムサービスアカウント
        'notipal-cloudrun-sa@${PROJECT_ID}.iam.gserviceaccount.com',
        '--set-secrets=ENCRYPTION_KEY=projects/${PROJECT_ID}/secrets/ENCRYPTION_KEY/versions/latest', # Secret ManagerからENCRYPTION_KEYを環境変数として設定
      ]

# イメージを保存する場所 (ビルドステップと一致させる)
images:
  - 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/notipal-backend-repo/notipal-backend:${COMMIT_SHA}'

# オプション: タイムアウト設定
timeout: '1200s' # 20分

options:
  logging: CLOUD_LOGGING_ONLY
